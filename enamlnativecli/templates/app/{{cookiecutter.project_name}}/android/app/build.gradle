apply plugin: 'com.android.application'

android {
    compileSdkVersion {{cookiecutter.android_sdk_version}}
    ndkVersion '{{cookiecutter.android_ndk_version}}'
    buildToolsVersion '{{cookiecutter.android_build_tools_version}}'
    defaultConfig {
        applicationId '{{cookiecutter.bundle_id}}'
        minSdkVersion {{ cookiecutter.android_min_sdk_version }}
        targetSdkVersion {{cookiecutter.android_target_sdk_version}}
        versionCode {{cookiecutter.app_version_code}}
        versionName '{{cookiecutter.app_version}}'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar', '*.so'], dir: 'libs')
    testImplementation 'junit:junit:5.8'

    // From ../venv/android/
    api project(':enaml-native')
}

